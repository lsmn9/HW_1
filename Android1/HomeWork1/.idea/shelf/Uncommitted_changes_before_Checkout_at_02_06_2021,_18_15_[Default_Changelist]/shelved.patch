Index: app/src/main/java/com/example/hw1/SecondActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hw1;\n\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.hardware.Sensor;\nimport android.hardware.SensorEvent;\nimport android.hardware.SensorEventListener;\nimport android.hardware.SensorManager;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.CheckBox;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\n\nimport com.google.android.material.textfield.TextInputEditText;\n\n\npublic class SecondActivity extends AppCompatActivity implements View.OnClickListener, SensorEventListener, Transmition {\n\n    CheckBox humbox, presbox, windbox;\n    Button btn;\n    SensorManager mySM;\n    Sensor humSens, presSens;\n    float humValue, presValue;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.city_choice);\n        initToolBar();\n        initItems();\n        initSensors();\n        btn.setOnClickListener(this);\n    }\n\n    private void initToolBar() {\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n    }\n\n    private void initItems() {\n        btn = findViewById(R.id.confirmation);\n        humbox = findViewById(R.id.humidity);\n        presbox = findViewById(R.id.pressure);\n        windbox = findViewById(R.id.wind);\n    }\n\n    private void initSensors() {\n        this.mySM = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n        humSens = mySM.getDefaultSensor(Sensor.TYPE_RELATIVE_HUMIDITY);\n        presSens = mySM.getDefaultSensor(Sensor.TYPE_PRESSURE);\n\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.main_menu, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n        int id = item.getItemId();\n        if (id == R.id.menu_all) {\n            humbox.setChecked(true);\n            presbox.setChecked(true);\n            windbox.setChecked(true);\n            return true;\n        }\n        if (id == R.id.menu_nothing) {\n            humbox.setChecked(false);\n            presbox.setChecked(false);\n            windbox.setChecked(false);\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    public void onClick(View view) {\n        Intent intent = new Intent(SecondActivity.this, MainActivity.class);\n        TextInputEditText et = findViewById(R.id.cityName);\n        intent.putExtra(TEXT, et.getText().toString());\n        intent.putExtra(humidityBox, humbox.isChecked());\n        intent.putExtra(pressureBox, presbox.isChecked());\n        intent.putExtra(windBox, windbox.isChecked());\n        startActivity(intent);\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n\n        if (presSens != null) {\n            mySM.registerListener(this, presSens, SensorManager.SENSOR_DELAY_NORMAL);\n        }\n        if (humSens != null) {\n            mySM.registerListener(this, humSens, SensorManager.SENSOR_DELAY_NORMAL);\n        }\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n        mySM.unregisterListener(this);\n    }\n\n    @Override\n    public void onSensorChanged(SensorEvent sensorEvent) {\n\n        if (sensorEvent.sensor.getType() == Sensor.TYPE_RELATIVE_HUMIDITY) {\n            humValue = sensorEvent.values[0];\n        }\n        if (sensorEvent.sensor.getType() == Sensor.TYPE_PRESSURE) {\n            final float PRESSURE_NORM = 1000;\n            final float PRESSURE_PERMITION = 20;\n            severeDeviation(PRESSURE_NORM, sensorEvent.values[0], PRESSURE_PERMITION);\n            presValue = sensorEvent.values[0];\n        }\n\n    }\n\n    private void severeDeviation(float norm, float current, float permition) {\n        if (Math.abs(norm - current) <= permition) {\n            {\n                stopService(new Intent(SecondActivity.this, Service_Pattern.class));\n            }\n        }\n        if (Math.abs(norm - current) > permition) {\n            startService(new Intent(SecondActivity.this, Service_Pattern.class));\n        }\n    }\n\n    @Override\n    public void onAccuracyChanged(Sensor sensor, int i) {\n    }\n\n    @Override\n    public void onPointerCaptureChanged(boolean hasCapture) {\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/hw1/SecondActivity.java	(revision 529da80ef20f8f7103d6e6107e0af7997ba8851c)
+++ app/src/main/java/com/example/hw1/SecondActivity.java	(date 1622646934112)
@@ -14,14 +14,9 @@
 import android.widget.Button;
 import android.widget.CheckBox;
 
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.appcompat.widget.Toolbar;
 
-import com.google.android.material.textfield.TextInputEditText;
 
-
-public class SecondActivity extends AppCompatActivity implements View.OnClickListener, SensorEventListener, Transmition {
+public class SecondActivity extends AppCompactActivity implements View.OnClickListener, SensorEventListener, Transmition {
 
     CheckBox humbox, presbox, windbox;
     Button btn;
Index: app/src/main/java/com/example/hw1/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hw1;\n\n\nimport android.Manifest;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.location.Address;\nimport android.location.Criteria;\nimport android.location.Geocoder;\nimport android.location.Location;\nimport android.location.LocationListener;\nimport android.location.LocationManager;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\n\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Objects;\n\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\nimport retrofit2.Retrofit;\nimport retrofit2.converter.gson.GsonConverterFactory;\n\nimport static com.example.hw1.MyReceiver.SEND_MSG;\n\n\npublic class MainActivity extends AppCompatActivity implements Transmition {\n\n    private static final int PERMISSION_REQUEST_CODE = 10;\n\n    private final float KEL_TO_CEL = 273f; // kelvin to cels\n    private static String INFO = \"https://en.wikipedia.org/wiki/\";\n    private RetroWeather retroWeather;\n    private TextView tempa, town, humidity, wind, pressure;\n    private SharedPreferences sPref;\n    private EditText editApiKey;\n    private Geocoder geocoder;\n    private Double lat, lng;\n    private MyReceiver myReceiver;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        geocoder = new Geocoder(this, Locale.getDefault());\n        initGUI();\n        initReceiver();\n        initPreferences();\n        initEvents();\n        initRetrofit();\n        requestPemissions();\n    }\n\n    private void initGUI() {\n        tempa = findViewById(R.id.Weather);\n        humidity = findViewById(R.id.humidity);\n        wind = findViewById(R.id.wind);\n        pressure = findViewById(R.id.pressure);\n        editApiKey = findViewById(R.id.ApiKey);\n        town = findViewById(R.id.City);\n        town.setText(getIntent().getExtras().getString(TEXT));\n    }\n\n    private void initReceiver() {\n        myReceiver = new MyReceiver();\n        registerReceiver(myReceiver, new IntentFilter(SEND_MSG));\n    }\n\n    private void initPreferences() {\n        sPref = getPreferences(MODE_PRIVATE);\n        loadPreferences();\n    }\n\n    private void loadPreferences() {\n        String loadedApiKey = sPref.getString(\"apiKey\", \"14c00f56e7d6dab3d5cad107267e29e4\");\n        editApiKey.setText(loadedApiKey);\n    }\n\n    private void initEvents() {\n        town.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                finish();\n            }\n        });\n\n        Button mytown = findViewById(R.id.mytown);\n        mytown.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                savePref();\n                requestRetrofit(myTownName(), editApiKey.getText().toString());\n                town.setText(myTownName());\n            }\n        });\n\n        Button info = findViewById(R.id.information);\n        info.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Intent browser = new Intent(Intent.ACTION_VIEW, Uri.parse(INFO + town.getText().toString()));\n                startActivity(browser);\n            }\n        });\n        Button refresh = findViewById(R.id.refresh);\n        refresh.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                savePref();\n                requestRetrofit(town.getText().toString(), editApiKey.getText().toString());\n            }\n        });\n    }\n\n    private void requestRetrofit(String city, String keyApi) {\n        retroWeather.loadWeather(city, keyApi)\n                .enqueue(new Callback<WeatherReq>() {\n                    @Override\n                    public void onResponse(Call<WeatherReq> call, Response<WeatherReq> response) {\n                        if (response.body() != null) {\n                            tempa.setText(Math.round(response.body().getMain().getTemp() - KEL_TO_CEL) + \" C\");\n                            humidity.setText(additions(humidityBox,\n                                    String.valueOf(response.body().getMain().getHumidity()), \"%\"));\n                            wind.setText(additions(windBox,\n                                    String.valueOf(response.body().getWind().getSpeed()), \"knt\"));\n                            pressure.setText(additions(pressureBox,\n                                    String.valueOf(response.body().getMain().getPressure()), \"GPa\"));\n                        } else {\n                            String msg = town.getText().toString();\n                            Intent intent = new Intent();\n                            intent.setAction(SEND_MSG);\n                            intent.putExtra(\"intent\", msg);\n                            sendBroadcast(intent);\n                        }\n                    }\n\n                    @Override\n                    public void onFailure(Call<WeatherReq> call, Throwable t) {\n                        tempa.setText(\"Error\");\n                    }\n                });\n    }\n\n    private String additions(String box, String data, String units) {\n        if (Objects.requireNonNull(getIntent().getExtras()).getBoolean(box)) {\n            return box + \": \" + data + \" \" + units + \"\\n\";\n        } else return \"\";\n    }\n\n    private String myTownName() {\n        String mytown = \"\";\n\n        List<Address> addresses = null;\n        try {\n            addresses = geocoder.getFromLocation(lat, lng, 1);\n\n            if (addresses != null) {\n                if (addresses.get(0).getLocality() == null) {\n                    mytown = addresses.get(0).toString();\n                } else mytown = addresses.get(0).getLocality();\n\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return mytown;\n    }\n\n    private void initRetrofit() {\n        Retrofit retrofit = new Retrofit.Builder()\n                .baseUrl(\"http://api.openweathermap.org/\")\n                .addConverterFactory(GsonConverterFactory.create())\n                .build();\n        retroWeather = retrofit.create(RetroWeather.class);\n    }\n\n    private void requestPemissions() {\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED\n                || ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            requestLocation();\n        } else {\n            requestLocationPermissions();\n        }\n    }\n\n    private void requestLocation() {\n\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED\n                && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED)\n            return;\n\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\n        Criteria criteria = new Criteria();\n        criteria.setAccuracy(Criteria.ACCURACY_COARSE);\n        String provider = locationManager.getBestProvider(criteria, true);\n        if (provider != null) {\n\n            locationManager.requestLocationUpdates(provider, 10000, 10, new LocationListener() {\n                @Override\n                public void onLocationChanged(Location location) {\n                    lat = location.getLatitude();\n                    lng = location.getLongitude();\n\n                }\n\n                @Override\n                public void onStatusChanged(String provider, int status, Bundle extras) {\n                }\n\n                @Override\n                public void onProviderEnabled(String provider) {\n                }\n\n                @Override\n                public void onProviderDisabled(String provider) {\n                }\n            });\n        }\n    }\n\n    private void requestLocationPermissions() {\n        if (!ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.CALL_PHONE)) {\n            ActivityCompat.requestPermissions(this,\n                    new String[]{\n                            Manifest.permission.ACCESS_COARSE_LOCATION,\n                            Manifest.permission.ACCESS_FINE_LOCATION\n                    },\n                    PERMISSION_REQUEST_CODE);\n        }\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        if (requestCode == PERMISSION_REQUEST_CODE) {\n            if (grantResults.length == 2 &&\n                    (grantResults[0] == PackageManager.PERMISSION_GRANTED || grantResults[1] == PackageManager.PERMISSION_GRANTED)) {\n                requestLocation();\n            }\n        }\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle saveInstanceState) {\n        super.onSaveInstanceState(saveInstanceState);\n        savePref();\n    }\n\n    private void savePref() {\n        SharedPreferences.Editor editor = sPref.edit();\n        editor.putString(\"apiKey\", editApiKey.getText().toString());\n        editor.commit();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        unregisterReceiver(myReceiver);\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/hw1/MainActivity.java	(revision 529da80ef20f8f7103d6e6107e0af7997ba8851c)
+++ app/src/main/java/com/example/hw1/MainActivity.java	(date 1622646934180)
@@ -2,6 +2,7 @@
 
 
 import android.Manifest;
+import android.app.Application;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.SharedPreferences;
@@ -37,7 +38,7 @@
 import static com.example.hw1.MyReceiver.SEND_MSG;
 
 
-public class MainActivity extends AppCompatActivity implements Transmition {
+public class MainActivity extends Application implements Transmition {
 
     private static final int PERMISSION_REQUEST_CODE = 10;
 
